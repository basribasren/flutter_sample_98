import 'bloc/lead_management_bloc.dart';import 'models/lead_management_model.dart';import 'package:basri_s_application9/core/app_export.dart';import 'package:basri_s_application9/widgets/app_bar/appbar_image.dart';import 'package:basri_s_application9/widgets/app_bar/appbar_subtitle_1.dart';import 'package:basri_s_application9/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application9/widgets/custom_switch.dart';import 'package:flutter/material.dart';class LeadManagementScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<LeadManagementBloc>(create: (context) => LeadManagementBloc(LeadManagementState(leadManagementModelObj: LeadManagementModel()))..add(LeadManagementInitialEvent()), child: LeadManagementScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray5001, appBar: CustomAppBar(height: getVerticalSize(53), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 16, top: 12, bottom: 17), onTap: () {onTapArrowleft48(context);}), centerTitle: true, title: AppbarSubtitle1(text: "msg_language_support".tr), actions: [AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgOverflowmenu, margin: getMargin(left: 16, top: 12, right: 16, bottom: 17))]), body: Container(width: double.maxFinite, padding: getPadding(left: 15, top: 24, right: 15, bottom: 24), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_lorem_ipsum2".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium16), Padding(padding: getPadding(top: 20, right: 2), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 3), child: Text("lbl_lorem_ipsum2".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18)), BlocSelector<LeadManagementBloc, LeadManagementState, bool?>(selector: (state) => state.isSelectedSwitch, builder: (context, isSelectedSwitch) {return CustomSwitch(value: isSelectedSwitch, onChanged: (value) {context.read<LeadManagementBloc>().add(ChangeSwitchEvent(value: value));});})])), Padding(padding: getPadding(top: 19, right: 2), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 3), child: Text("lbl_lorem_ipsum2".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18)), BlocSelector<LeadManagementBloc, LeadManagementState, bool?>(selector: (state) => state.isSelectedSwitch1, builder: (context, isSelectedSwitch1) {return CustomSwitch(value: isSelectedSwitch1, onChanged: (value) {context.read<LeadManagementBloc>().add(ChangeSwitch1Event(value: value));});})])), Padding(padding: getPadding(top: 19, right: 2), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 3), child: Text("lbl_lorem_ipsum2".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18)), BlocSelector<LeadManagementBloc, LeadManagementState, bool?>(selector: (state) => state.isSelectedSwitch2, builder: (context, isSelectedSwitch2) {return CustomSwitch(value: isSelectedSwitch2, onChanged: (value) {context.read<LeadManagementBloc>().add(ChangeSwitch2Event(value: value));});})])), Padding(padding: getPadding(top: 20, right: 2, bottom: 5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 3), child: Text("lbl_add_a_language".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18)), CustomImageView(svgPath: ImageConstant.imgArrowright, height: getSize(24), width: getSize(24), margin: getMargin(bottom: 1))]))])))); } 
onTapArrowleft48(BuildContext context) { NavigatorService.goBack(); } 
 }
