import '../customisable_user_subscriptions_screen/widgets/listten_item_widget.dart';import '../customisable_user_subscriptions_screen/widgets/listtotalvisits_item_widget.dart';import 'bloc/customisable_user_subscriptions_bloc.dart';import 'models/customisable_user_subscriptions_model.dart';import 'models/listten_item_model.dart';import 'models/listtotalvisits_item_model.dart';import 'package:basri_s_application9/core/app_export.dart';import 'package:basri_s_application9/widgets/app_bar/appbar_image.dart';import 'package:basri_s_application9/widgets/app_bar/appbar_subtitle_1.dart';import 'package:basri_s_application9/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application9/widgets/custom_checkbox.dart';import 'package:basri_s_application9/widgets/custom_radio_button.dart';import 'package:flutter/material.dart';class CustomisableUserSubscriptionsScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<CustomisableUserSubscriptionsBloc>(create: (context) => CustomisableUserSubscriptionsBloc(CustomisableUserSubscriptionsState(customisableUserSubscriptionsModelObj: CustomisableUserSubscriptionsModel()))..add(CustomisableUserSubscriptionsInitialEvent()), child: CustomisableUserSubscriptionsScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray5001, appBar: CustomAppBar(height: getVerticalSize(53), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 16, top: 12, bottom: 17), onTap: () {onTapArrowleft32(context);}), centerTitle: true, title: AppbarSubtitle1(text: "lbl_pricing_plans".tr)), body: Container(width: double.maxFinite, padding: getPadding(left: 16, right: 16), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(width: double.maxFinite, child: Container(margin: getMargin(top: 20), decoration: AppDecoration.outlineGray70011.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(padding: getPadding(left: 12, top: 10, right: 12, bottom: 10), decoration: AppDecoration.fillBlue50.copyWith(borderRadius: BorderRadiusStyle.customBorderTL6), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(left: 4, top: 1, bottom: 1), child: Text("lbl_basic_plan".tr.toUpperCase(), overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyBold18)), CustomImageView(svgPath: ImageConstant.imgGlobe, height: getSize(24), width: getSize(24), margin: getMargin(top: 1))])), Padding(padding: getPadding(left: 16, top: 22), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgClock24x24, height: getSize(24), width: getSize(24), margin: getMargin(top: 5, bottom: 14)), Text("lbl_502".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyBold36BlueA700), Padding(padding: getPadding(top: 17, bottom: 4), child: Text("lbl_month".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium18Bluegray900))])), Padding(padding: getPadding(left: 16, top: 23, right: 114), child: BlocSelector<CustomisableUserSubscriptionsBloc, CustomisableUserSubscriptionsState, CustomisableUserSubscriptionsModel?>(selector: (state) => state.customisableUserSubscriptionsModelObj, builder: (context, customisableUserSubscriptionsModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(16));}, itemCount: customisableUserSubscriptionsModelObj?.listtotalvisitsItemList.length ?? 0, itemBuilder: (context, index) {ListtotalvisitsItemModel model = customisableUserSubscriptionsModelObj?.listtotalvisitsItemList[index] ?? ListtotalvisitsItemModel(); return ListtotalvisitsItemWidget(model);});})), Padding(padding: getPadding(left: 16, top: 18, right: 53), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgCheckmark, height: getSize(22), width: getSize(22), margin: getMargin(bottom: 27)), Expanded(child: Container(width: getHorizontalSize(292), margin: getMargin(left: 12), child: Text("msg_lorem_ipsum_dolor".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtGilroyRegular16Bluegray900)))])), Padding(padding: getPadding(left: 16, top: 10, right: 53), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgCheckmark, height: getSize(22), width: getSize(22), margin: getMargin(bottom: 27)), Expanded(child: Container(width: getHorizontalSize(292), margin: getMargin(left: 12), child: Text("msg_lorem_ipsum_dolor".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtGilroyRegular16Bluegray900)))])), Padding(padding: getPadding(left: 16, top: 10, right: 53), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgCheckmark, height: getSize(22), width: getSize(22), margin: getMargin(bottom: 27)), Expanded(child: Container(width: getHorizontalSize(292), margin: getMargin(left: 12), child: Text("msg_lorem_ipsum_dolor".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtGilroyRegular16Bluegray900)))])), Padding(padding: getPadding(left: 16, top: 10, right: 53, bottom: 16), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgCheckmark, height: getSize(22), width: getSize(22), margin: getMargin(bottom: 27)), Expanded(child: Container(width: getHorizontalSize(292), margin: getMargin(left: 12), child: Text("msg_lorem_ipsum_dolor".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtGilroyRegular16Bluegray900)))]))]))), Container(width: double.maxFinite, child: Container(margin: getMargin(top: 24), decoration: AppDecoration.outlineGray70011.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [BlocSelector<CustomisableUserSubscriptionsBloc, CustomisableUserSubscriptionsState, String?>(selector: (state) => state.radioGroup, builder: (context, radioGroup) {return CustomRadioButton(width: getHorizontalSize(396), text: "lbl_premium_plan".tr.toUpperCase(), value: "lbl_premium_plan".tr ?? "", groupValue: radioGroup, variant: RadioVariant.FillBlue50, shape: RadioShape.CustomBorderTL6, padding: RadioPadding.PaddingAll11, fontStyle: RadioFontStyle.GilroyBold18, isRightCheck: true, onChange: (value) {context.read<CustomisableUserSubscriptionsBloc>().add(ChangeRadioButtonEvent(value: value));});}), Padding(padding: getPadding(left: 16, top: 22), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgClock24x24, height: getSize(24), width: getSize(24), margin: getMargin(top: 5, bottom: 14)), Text("lbl_1002".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyBold36BlueA700), Padding(padding: getPadding(top: 17, bottom: 4), child: Text("lbl_month".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium18Bluegray900))])), Padding(padding: getPadding(left: 16, top: 23, right: 105), child: BlocSelector<CustomisableUserSubscriptionsBloc, CustomisableUserSubscriptionsState, CustomisableUserSubscriptionsModel?>(selector: (state) => state.customisableUserSubscriptionsModelObj, builder: (context, customisableUserSubscriptionsModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(16));}, itemCount: customisableUserSubscriptionsModelObj?.listtenItemList.length ?? 0, itemBuilder: (context, index) {ListtenItemModel model = customisableUserSubscriptionsModelObj?.listtenItemList[index] ?? ListtenItemModel(); return ListtenItemWidget(model);});})), Padding(padding: getPadding(left: 16, top: 18, right: 53), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgCheckmark, height: getSize(22), width: getSize(22), margin: getMargin(bottom: 27)), Expanded(child: Container(width: getHorizontalSize(292), margin: getMargin(left: 12), child: Text("msg_lorem_ipsum_dolor".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtGilroyRegular16Bluegray900)))])), BlocSelector<CustomisableUserSubscriptionsBloc, CustomisableUserSubscriptionsState, bool?>(selector: (state) => state.isCheckbox, builder: (context, isCheckbox) {return CustomCheckbox(text: "msg_lorem_ipsum_dolor".tr, value: isCheckbox, margin: getMargin(left: 16, top: 7, right: 53), fontStyle: CheckboxFontStyle.GilroyRegular16, onChange: (value) {context.read<CustomisableUserSubscriptionsBloc>().add(ChangeCheckBoxEvent(value: value));});}), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 16, top: 36, right: 16), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgCheckmark, height: getSize(22), width: getSize(22), margin: getMargin(top: 2, bottom: 28)), Expanded(child: Container(width: getHorizontalSize(330), margin: getMargin(left: 12), child: Text("msg_lorem_ipsum_dolor".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtGilroyRegular16Bluegray900)))]))), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 16, top: 8, right: 16, bottom: 16), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgCheckmark, height: getSize(22), width: getSize(22), margin: getMargin(top: 2, bottom: 28)), Expanded(child: Container(width: getHorizontalSize(330), margin: getMargin(left: 12), child: Text("msg_lorem_ipsum_dolor".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtGilroyRegular16Bluegray900)))])))])))])))); } 
onTapArrowleft32(BuildContext context) { NavigatorService.goBack(); } 
 }
