import '../multiple_currency_support_screen/widgets/listlock_item_widget.dart';import 'bloc/multiple_currency_support_bloc.dart';import 'models/listlock_item_model.dart';import 'models/multiple_currency_support_model.dart';import 'package:basri_s_application9/core/app_export.dart';import 'package:basri_s_application9/widgets/app_bar/appbar_image.dart';import 'package:basri_s_application9/widgets/app_bar/appbar_subtitle_1.dart';import 'package:basri_s_application9/widgets/app_bar/custom_app_bar.dart';import 'package:flutter/material.dart';class MultipleCurrencySupportScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<MultipleCurrencySupportBloc>(create: (context) => MultipleCurrencySupportBloc(MultipleCurrencySupportState(multipleCurrencySupportModelObj: MultipleCurrencySupportModel()))..add(MultipleCurrencySupportInitialEvent()), child: MultipleCurrencySupportScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray5001, appBar: CustomAppBar(height: getVerticalSize(53), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 16, top: 12, bottom: 17), onTap: () {onTapArrowleft51(context);}), centerTitle: true, title: AppbarSubtitle1(text: "lbl_change_currency".tr)), body: Padding(padding: getPadding(left: 18, top: 20, right: 18), child: BlocSelector<MultipleCurrencySupportBloc, MultipleCurrencySupportState, MultipleCurrencySupportModel?>(selector: (state) => state.multipleCurrencySupportModelObj, builder: (context, multipleCurrencySupportModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(16));}, itemCount: multipleCurrencySupportModelObj?.listlockItemList.length ?? 0, itemBuilder: (context, index) {ListlockItemModel model = multipleCurrencySupportModelObj?.listlockItemList[index] ?? ListlockItemModel(); return ListlockItemWidget(model, onTapImgLock: () {onTapImgLock(context);});});})))); } 
onTapImgLock(BuildContext context) async  { await PermissionManager.askForPermission(Permission.camera); await PermissionManager.askForPermission(Permission.storage); List<String?>? imageList = []; await FileManager().showModelSheetForImage(getImages: (value) async {imageList = value;}); } 
onTapArrowleft51(BuildContext context) { NavigatorService.goBack(); } 
 }
