import 'bloc/multiple_gesture_recogniser_bloc.dart';import 'models/multiple_gesture_recogniser_model.dart';import 'package:basri_s_application9/core/app_export.dart';import 'package:basri_s_application9/widgets/app_bar/appbar_image.dart';import 'package:basri_s_application9/widgets/app_bar/appbar_subtitle_1.dart';import 'package:basri_s_application9/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application9/widgets/custom_switch.dart';import 'package:flutter/material.dart';class MultipleGestureRecogniserScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<MultipleGestureRecogniserBloc>(create: (context) => MultipleGestureRecogniserBloc(MultipleGestureRecogniserState(multipleGestureRecogniserModelObj: MultipleGestureRecogniserModel()))..add(MultipleGestureRecogniserInitialEvent()), child: MultipleGestureRecogniserScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray5001, appBar: CustomAppBar(height: getVerticalSize(53), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 16, top: 12, bottom: 17), onTap: () {onTapArrowleft54(context);}), centerTitle: true, title: AppbarSubtitle1(text: "msg_multiple_gesture".tr)), body: Container(width: double.maxFinite, padding: getPadding(left: 16, top: 22, right: 16, bottom: 22), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 1, bottom: 1), child: Text("lbl_zoom".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18)), BlocSelector<MultipleGestureRecogniserBloc, MultipleGestureRecogniserState, bool?>(selector: (state) => state.isSelectedSwitch, builder: (context, isSelectedSwitch) {return CustomSwitch(value: isSelectedSwitch, onChanged: (value) {context.read<MultipleGestureRecogniserBloc>().add(ChangeSwitchEvent(value: value));});})]), Padding(padding: getPadding(top: 14), child: Text("msg_zoom_magnifies_the".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium14Bluegray600)), Padding(padding: getPadding(left: 8, top: 12), child: Text("msg_double_tap_three".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium14Bluegray400)), Padding(padding: getPadding(left: 8, top: 9), child: Text("msg_drag_three_finger".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium14Bluegray400)), Padding(padding: getPadding(left: 8, top: 8), child: Text("msg_double_tap_three2".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium14Bluegray400)), Padding(padding: getPadding(top: 23), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 1, bottom: 1), child: Text("lbl_follow_focus".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18)), BlocSelector<MultipleGestureRecogniserBloc, MultipleGestureRecogniserState, bool?>(selector: (state) => state.isSelectedSwitch1, builder: (context, isSelectedSwitch1) {return CustomSwitch(value: isSelectedSwitch1, onChanged: (value) {context.read<MultipleGestureRecogniserBloc>().add(ChangeSwitch1Event(value: value));});})])), Padding(padding: getPadding(top: 24), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 3), child: Text("lbl_smart_typing".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18)), BlocSelector<MultipleGestureRecogniserBloc, MultipleGestureRecogniserState, bool?>(selector: (state) => state.isSelectedSwitch2, builder: (context, isSelectedSwitch2) {return CustomSwitch(value: isSelectedSwitch2, onChanged: (value) {context.read<MultipleGestureRecogniserBloc>().add(ChangeSwitch2Event(value: value));});})])), Container(width: getHorizontalSize(379), margin: getMargin(top: 11, right: 16), child: Text("msg_smart_typing_will".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium14Bluegray600)), Padding(padding: getPadding(top: 23), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 5), child: Text("msg_keyboard_shortcuts".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18)), Spacer(), Padding(padding: getPadding(top: 2, bottom: 5), child: Text("lbl_on".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyRegular16)), CustomImageView(svgPath: ImageConstant.imgArrowrightBlueGray600, height: getSize(24), width: getSize(24), margin: getMargin(left: 8, bottom: 3))])), Padding(padding: getPadding(top: 17), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 3), child: Text("lbl_zoom_controller".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18)), Spacer(), Padding(padding: getPadding(top: 2, bottom: 3), child: Text("lbl_off".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyRegular16)), CustomImageView(svgPath: ImageConstant.imgArrowrightBlueGray600, height: getSize(24), width: getSize(24), margin: getMargin(left: 8, bottom: 1))])), Padding(padding: getPadding(top: 19), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 5), child: Text("lbl_zoom_region".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18)), Spacer(), Padding(padding: getPadding(top: 2, bottom: 5), child: Text("msg_full_screen_zoom".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyRegular16)), CustomImageView(svgPath: ImageConstant.imgArrowrightBlueGray600, height: getSize(24), width: getSize(24), margin: getMargin(left: 8, bottom: 3))])), Padding(padding: getPadding(top: 17), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 3), child: Text("lbl_zoom_filter".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18)), Spacer(), Padding(padding: getPadding(top: 3, bottom: 3), child: Text("lbl_none".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyRegular16)), CustomImageView(svgPath: ImageConstant.imgArrowrightBlueGray600, height: getSize(24), width: getSize(24), margin: getMargin(left: 8, bottom: 1))])), Padding(padding: getPadding(top: 35), child: Text("msg_maximum_zoom_level".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium14Bluegray600)), Padding(padding: getPadding(top: 18, bottom: 5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [SliderTheme(data: SliderThemeData(trackShape: RoundedRectSliderTrackShape(), activeTrackColor: ColorConstant.blueA700, inactiveTrackColor: ColorConstant.blue50, thumbColor: ColorConstant.gray50, thumbShape: RoundSliderThumbShape()), child: Slider(value: 52.16, min: 0.0, max: 100.0, onChanged: (value) {})), Padding(padding: getPadding(top: 2, bottom: 1), child: Text("lbl_5_0_px".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold16Bluegray400))]))])))); } 
onTapArrowleft54(BuildContext context) { NavigatorService.goBack(); } 
 }
